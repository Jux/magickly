# /etc/init/unicorn.conf - Unicorn config

# This example config should work with Ubuntu 12.04+.  It
# allows you to manage multiple Unicorn instances with
# Upstart, Ubuntu's native service management tool.
#
# Save (or symlink) this config as /etc/init/unicorn.conf then manage unicorn with:
#   sudo start unicorn app=PATH_TO_APP
#   sudo stop unicorn app=PATH_TO_APP
#   sudo status unicorn app=PATH_TO_APP
#
# or use the service command:
#   sudo service unicorn {start,stop,restart,status}
#

description "Unicorn Background Worker"

# no "start on", we don't want to automatically start
stop on (stopping puma-manager or runlevel [06])

# change apps to match your deployment user if you want to use this as a less privileged user (recommended!)
# later change this to a Magickly specific user.
 setuid tcollinson
 setgid tcollinson

respawn
respawn limit 3 30

instance ${app}

script
# this script runs in /bin/sh by default
# respawn as bash so we can source in rbenv/rvm
# quoted heredoc to tell /bin/sh not to interpret
# variables
exec /bin/bash <<'EOT'
  # set HOME to the setuid user's home, there doesn't seem to be a better, portable way
  export HOME="$(eval echo ~$(id -un))"

  if [ -d "$HOME/.rbenv/bin" ]; then
    export PATH="$HOME/.rbenv/bin:$PATH"
  elif [ -f  /etc/profile.d/rvm.sh ]; then
    source /etc/profile.d/rvm.sh
  elif [ -f /usr/local/rvm/scripts/rvm ]; then
    source /etc/profile.d/rvm.sh
  elif [ -f "$HOME/.rvm/scripts/rvm" ]; then
    source "$HOME/.rvm/scripts/rvm"
  elif [ -f /usr/local/share/chruby/chruby.sh ]; then
    source /usr/local/share/chruby/chruby.sh
    if [ -f /usr/local/share/chruby/auto.sh ]; then
      source /usr/local/share/chruby/auto.sh
    fi
    # if you aren't using auto, set your version here
    # chruby 2.0.0
  fi

  cd $app
  logger -t unicorn "Starting server: $app"

  if [ -S "$app/tmp/socks/unicorn.sock" ]; then
    rm -v $app/tmp/socks/unicorn.sock
  fi

  exec bundle exec unicorn -c config/unicorn.rb
EOT
end script